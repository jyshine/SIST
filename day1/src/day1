2018-06-16 재직자 과정 Spring 4.0 day1

이클립스 테마 DevStyle Theme 폰트는 Consolas
Computer = EDPS (Electronic Data Processing System)

java는 설계 언어이다.

연산자 중 속도가 가장 빠른 연산자는 bite 연산자인다.
Shift 연산 2진법 추후 공부해 보기	//TODO

data 처리 연산자 CPU(ALD, CU, 메모리) 	->	Micro Process(제어, 연산, 기억소자(register)
								메모리에서 로딩하여 기억소자로 넘겨줌? //TODO
For문을 통해 1~100 합을 구하는 알고리즘. 

SUM = (1+100) * 50; 을 활용.

int Total = (2,50,1)
				 홀수 1,짝수2

-TODO
 객체 지향의 5대 원칙 SOILD 참고 사이트 www.nextree.co.kr/p6960

-공통 정보는 상수로 표현하고 한 Class에서 관리해주기.


sts download
PC 환경 확인
	운영체제 : window10 64 bit
	


-TIP
1.폴더 관리 잘해야한다.
	폴더 관리는 데이터의 그룹화
	폴더는 다 영문으로 띄여쓰기 없이.
	file 관리 => 접두어, 접미어 활용
 	이러한 data 관리의 출발이 DBMS이다.
 	Chrome에서 설정 > 고급 > 다운로도 경로 
 	
 	C:\에는 프로그램만 들어가 있어야 한다.
 	Data 관리를 위해서 별도 드라이버 d:\ e:\ 그룹화로 저장한다.
	
	download > util driver lib  compiler
	javaWS
	바탕화면에 단축 아이콘
	
	컴퓨처 관리 > 디스크 관리 > 해당 드라이버에서 볼륨 축소 > 용량을 입력하여 쪼개기
	
-WEB
			네트워크 기반
	Client 요청
				Server 처리
							DataBase와 연동
						
-TIP
	1.어떤 결과를 요구하는가 를 정의 및 나열해보기
	2.요구사항을 위해서 (제공되는 필요한 자료, 처리 과정에서 생성되는 자료)
	3.클래스 정의 Bean or VO or DTO
	//네트워크 상에서 이루어지기 때문에 붙여주는게 좋다 상세한 내용은 TODO
	class MemberDTO implements Serializable{
	}
	//ToString 만들어주기 권장
	//hashCode() and equals()  메소드 overriding 할 때 개발자 도구에서 한번 고려하고 하기 selectAll 하지말기
	
	MemberDTO memberDTO = new MemberDTO("이름","주소","20");
	MemberDTO memberDTO2 = new MemberDTO("이름","주소","25");
	
	memberDTO.equals(memberDTO2); //hashCode selectAll로 했을 경우는 false
	//만약 이름과 주소가 같으면 같다고 정의하고 싶을 땐 hashCode 선택 시 고려해서 선택하기.
	
	다나와 사이트 : 
		사용자가 원하는 정보를 얻는 데 얼마나 시간이 얼마나 소유됐지는와 몇번을 클릭했는지.
		처음 방문시 메인쪽 정보는 똑같지만,
		사이트 이용했을 시 사용자가 정보를 찾았다면 그 정보를 바탕으로 재 방문시, 메인 정보 바꿔주기. 
		
		session으로 구현할 시, macAddress(Media Access Control Address)를 가져와서 확인? (로그인 안했을시)
		혹은 위의 hashCode()를 활용
		
-Joking		
	WOW 깃 을 만든 사람은 리눅스 만든 사람이었는데 깃허브를 만든사람이 돈을 많이 벌었네? open?
	IBM, 컴퓨터(ms)나 디비(oracle),JAVA?를 만들었지만 돈은 딴데서 배운다. 
	
-TIP 
	순서 (Process)를 기억하고 진행하고 순서를 다시 돌아가며 검토하여 완성도 높이기.	

-NEW keyword 연산자는 객체(묶음 자료)를 생성
	() 함수 호출 연산자
	() 우선순위 결정
	heap 영역에 저장.
	
-자바 메모리 구조 
|		class		|어플리케이션이 종료되었을 때 연결을 끊어준다.
|stack	|heap		|heap은 메소드 종료되면 연결을 끊어준다.
stack은 알 수 없다.

-문자열이 계속 변경이 된다면
	String 쓰면 안된다.
	StringBuffer sb = new StringBuffer('양'); 참조형 
	StringBuilder sb 
	
-String의 크기는 4byte (운영체제 32bit) 또는 8byte (운영체제 64bit)

-Java EE 버전 확인 
	https://www.oracle.com/java/technologies/java-ee.html
	(어느 정도 검증된 곳)

-강사님 PC에서 Book 폴더에 PDF 파일 받기.

-실행
	-OS등록되서 사ㅇ용 system 자원 을 효율적으로 사용할 수 있다.
	-OS 등록 없이 자체실행 (ex eclipse) 자체 실행
	
	
-Spring 설치
	https://spring.io/tools/sts/all
	
	STS 3.9.4.RELEASE
	압축파일 압축풀기
	W:\download\util\ide\sts-bundle\sts-3.9.4.RELEASE
													STS.exe 실행
																workspace 설정
	
	강사님 개인 의견 project1	sts1	A프로젝트용 개발
				priject2	sts2	B프로젝트용 개발
													따로 가지고 간다.
																프로젝트 끝나면 삭제.
																				하드 용량 차이가 크게 나지 않는다.
																				
																				
-이해하는 것이(왜 어떻게 만들어 졌는지) 좋고 그게 어렵다면 공식(순서)를 외워 적용(그러려면 체크리스트가 필요하다(어떤기능들을 어떻게 쓸 것인가?))

TIP														
	명령처리 기본단위 32bit, 64bit
	실수 계산할 때 정수로 변경하여 연산 후 처리해주면 된다.




why?
	참조 값 즉 객체를 주입한다.
	객체를 생성하는데 있어서 직접 생성하는 것이 아니라 Spring IOC 컨테이너에서 만들어서 객체를 만들어서 준다. 
	어떤 객체를 만들어야하는지 ?  -> 설정 정보 -> xml 또는 annotaion -> mataData
	누구를 사용하여 객체를 만들어줄 것인지? 어느 클래스인지.	
	


1)이클립스 환경설정
	font 
		변경 console 폰트 기본적으로 하기
	검색 영역에서 enco UTF-8로 변경
		-Workspace
		-CSS files
		-HTML files
		-JSP files
		-XML files
	web > JSP files > editor
		templeate - New JSP File (New JSP File (html))
		
		naver.com 소스보기 <meta name="viewport" content="width=1100">
		m.naver.com 소스보기 <meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no">
		구글 서치에 영향 <meta name="description" content="네이버 모바일 메인에서 다양한 정보와 유용한 컨텐츠를 만나 보세요"/> 	
		검색어를 입력하는 키워드 <meta name="keywords" content="경향신문, 뉴스, 경향, 경향닷컴, 레이디경향, 주간경향, 스포츠경향, 스마일경향" />
														8개 이상이되면 막아버린다.
		<meta charset=${encoding}"> 은 맨 위로												
	google.com 과 naver.com 소스보기의 차이.
	불필요한 공백을 제거됨 / naver.com은 편집하게편하게 되어 있음
		trimdirectivewhitespaces= "true" 공백제거
	
			<%@ page contentType="text/html; charset=${encoding}" trimdirectivewhitespaces= "true" %>
			<!DOCTYPE html>
			<html>
			<head>
			<meta charset=${encoding}">
			<meta name="viewport" content="width=1100">
			<!--
			<meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no">
			-->
			<meta name="description" content="네이버 모바일 메인에서 다양한 정보와 유용한 컨텐츠를 만나 보세요"/>
			 <meta name="keywords" content="경향신문, 뉴스, 경향, 경향닷컴, 레이디경향, 주간경향, 스포츠경향, 스마일경향" />
			<title>Insert title here</title>
			</head>
			<body>
			${cursor}
			</body>
			</html>
	
	
	
2)프로젝트 생성 project -> spring legacy project -> test용으로 simple Spring Maven
												simple java 와 simple Spring Maven  
												simple Spring Web Maven
												Spring MVC Project 권장											

	src/main/resources 는 설정 정보를 저장하는 것을 권장
	
3)라이브러리 확인	lib	/	maven lib 확인

	C:\Users\SIST180\.m2\repository 라이브러리 문제일 경운 m2 > repository 폴더 혹은 파일 삭제 후 maven 업데이트.

4)pom.xml 확인	
		junit을 주석하면 maven에서 지워준다. 자동으로 pom.xml에서 라이브러리를 자동으로 저장해준다.
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
	필요한 라이브러리는 https://mvnrepository.com/ 에서 찾아서 dependency를 복사에서 붙여넣기해준다.
	
	<properties>에서 버전관리를 따로 해준다.
	아래 예시 junit version 비교
	
		  <properties>
	
			<!-- Generic properties -->
			<java.version>1.6</java.version>
			<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
			<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	
			<!-- Spring -->
			<spring-framework.version>3.2.3.RELEASE</spring-framework.version>
	
			<!-- Hibernate / JPA -->
			<hibernate.version>4.2.1.Final</hibernate.version>
	
			<!-- Logging -->
			<logback.version>1.0.13</logback.version>
			<slf4j.version>1.7.5</slf4j.version>
	
			<!-- Test -->
			<junit.version>4.11</junit.version>
	
		</properties>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		

		<!-- https://mvnrepository.com/artifact/junit/junit -->
<!-- 		<dependency> -->
<!-- 		    <groupId>junit</groupId> -->
<!-- 		    <artifactId>junit</artifactId> -->
<!-- 		    <version>4.12</version> -->
<!-- 		    <scope>test</scope> -->
<!-- 		</dependency> -->
	
	라이브러리 추가시 주석을 달아서 확인한다.
	<!-- 		2018-06-16 용도 :   -->
	
5) JDBC 벤더 드라이버
	직접 받아서 C:\Program Files\Java\jdk1.8.0_172\jre\lib\ext
	jar를 파일 복사 붙여넣기 ojdbc.jar
	이클립스 껐다 키면 JRE에 나타남.	
	기본적으로  3가지 라이브러리 가지고 있기
	ojdbc 드라이버
	mssql 드라이버 
	mysql 드리이버
	
6)	private 로 생성된 변수들로 정보를 은닉하고 
	public set으로 값을 설정해준다. 
	
	spring bean configuration file 생성

	jusd
	


	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	